{"version":3,"file":"static/js/746.a4e57cd4.chunk.js","mappings":"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","sources":["shared/ui/searchbar/index.tsx","entities/atms/ui/atmsCard.tsx","entities/atms/ui/atmsList.tsx","features/atmsSearch/index.tsx","features/mapMarker/index.tsx","webpack://client/./src/shared/ui/widget/index.module.css?0ef2","shared/ui/widget/index.tsx","widgets/atmsSearchWidget/index.tsx","features/userCard/index.tsx","webpack://client/./src/features/giftButton/index.module.css?322a","features/giftButton/index.tsx","shared/ui/loadingIndicator/index.tsx","features/activitiesCarousele/activity/index.tsx","features/activitiesCarousele/index.tsx","shared/ui/slideCarousel/index.tsx","features/slideCarouselContainer/index.tsx","pages/home/index.tsx","shared/ui/navbar/index.tsx"],"sourcesContent":["import React from \"react\";\r\nimport { FiSearch } from \"react-icons/fi\";\r\n\r\ninterface SearchbarProps {\r\n  placeholder: string;\r\n  value: string;\r\n  onChange: (value: string) => void;\r\n  onClick: () => void;\r\n}\r\n\r\nconst Searchbar: React.FC<SearchbarProps> = ({\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  onClick,\r\n}) => {\r\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    onChange(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex justify-center items-center w-280 bg-gray-100 rounded-lg p-2 inset-x-0 top-0 mx-auto shadow-inner \">\r\n      <FiSearch className=\"text-gray-500 mr-2\" />\r\n      <input\r\n        type=\"text\"\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={handleChange}\r\n        onClick={onClick}\r\n        className=\"bg-transparent outline-none\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Searchbar;\r\n","import React, { useState } from \"react\";\r\n\r\nimport { Atm } from \"../model/atms\";\r\n\r\ninterface AtmCardProps {\r\n  atm: Atm;\r\n  handleWidtgetToggle: () => void;\r\n}\r\n\r\nconst AtmCard: React.FC<AtmCardProps> = ({ atm, handleWidtgetToggle }) => {\r\n  return (\r\n    <div\r\n      onClick={handleWidtgetToggle}\r\n      className=\"p-2 cursor-pointer transition-colors hover:bg-blue-500 hover:text-white  border-b-blue \"\r\n    >\r\n      <div>{atm.location}</div>\r\n      <div>{atm.address}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtmCard;\r\n","import React from \"react\";\r\nimport { Atm } from \"../model/atms\";\r\nimport AtmCard from \"./atmsCard\";\r\n\r\ninterface AtmsListProps {\r\n  atms: Atm[];\r\n  handleWidtgetToggle: () => void;\r\n}\r\n\r\nconst AtmsList: React.FC<AtmsListProps> = ({ atms, handleWidtgetToggle }) => {\r\n  if (atms.length === 0) {\r\n    return <div>No ATMs found</div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"absolute rounded-b-lg bg-gray-100 -mt-1 w-full z-5 \">\r\n      {atms.map((atm) => (\r\n        <AtmCard\r\n          key={atm.id}\r\n          atm={atm}\r\n          handleWidtgetToggle={handleWidtgetToggle}\r\n        />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtmsList;\r\n","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { Atm } from \"../../entities/atms/model/atms\";\r\nimport Searchbar from \"../../shared/ui/searchbar\";\r\nimport AtmsList from \"../../entities/atms/ui/atmsList\";\r\n\r\ninterface AtmsSearchProps {\r\n  atms: Atm[];\r\n  handleWidtgetToggle: () => void;\r\n}\r\n\r\nconst AtmsSearch: React.FC<AtmsSearchProps> = ({\r\n  atms,\r\n  handleWidtgetToggle,\r\n}) => {\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState<Atm[]>([]);\r\n  const [searchResultOpened, setSearchResultOpen] = useState(false);\r\n\r\n  const searchResultRef = useRef<HTMLDivElement>(null);\r\n\r\n  const handleSearch = (value: string) => {\r\n    const filteredResults = atms.filter(\r\n      (atm) =>\r\n        atm.location.toLowerCase().includes(value.toLowerCase()) ||\r\n        atm.address.toLowerCase().includes(value.toLowerCase())\r\n    );\r\n\r\n    setSearchResults(filteredResults);\r\n    setSearchText(value);\r\n  };\r\n\r\n  const handleSearchbarClick = () => {\r\n    if (searchResults.length > 0) {\r\n      setSearchResultOpen(true);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    setSearchResultOpen(searchText.length > 0);\r\n  }, [searchText]);\r\n\r\n  useEffect(() => {\r\n    const handleClickOutside = (event: MouseEvent) => {\r\n      if (\r\n        searchResultRef.current &&\r\n        !searchResultRef.current.contains(event.target as Node)\r\n      ) {\r\n        setSearchResultOpen(false);\r\n      }\r\n    };\r\n\r\n    document.addEventListener(\"mousedown\", handleClickOutside);\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", handleClickOutside);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div ref={searchResultRef}>\r\n      <Searchbar\r\n        placeholder=\"ATMs\"\r\n        value={searchText}\r\n        onChange={handleSearch}\r\n        onClick={handleSearchbarClick}\r\n      />\r\n      {searchResultOpened && (\r\n        <AtmsList\r\n          handleWidtgetToggle={handleWidtgetToggle}\r\n          atms={searchResults}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AtmsSearch;\r\n","import { GoogleMap, LoadScript } from \"@react-google-maps/api\";\r\n\r\nfunction MapMarker() {\r\n  const mapContainerStyle = {\r\n    width: \"100%\",\r\n    height: \"400px\",\r\n  };\r\n\r\n  const center = {\r\n    lat: 51.5074,\r\n    lng: -0.1278,\r\n  };\r\n\r\n  return (\r\n    <LoadScript googleMapsApiKey=\"YOUR_API_KEY\">\r\n      <GoogleMap\r\n        mapContainerStyle={mapContainerStyle}\r\n        center={center}\r\n        zoom={10}\r\n      />\r\n    </LoadScript>\r\n  );\r\n}\r\n\r\nexport default MapMarker;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"widget_overlay__n6SeD\",\"modal\":\"widget_modal__yN74c\",\"close_button\":\"widget_close_button__QGshV\"};","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport styles from \"./index.module.css\";\r\n\r\ninterface WidgetProps {\r\n  onToggle: () => void;\r\n  widgetTitle: string;\r\n  isWidgetOpen: boolean;\r\n}\r\n\r\nconst Widget: React.FC<WidgetProps> = ({\r\n  onToggle,\r\n  children,\r\n  widgetTitle,\r\n  isWidgetOpen,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      isOpen={isWidgetOpen}\r\n      onRequestClose={onToggle}\r\n      shouldCloseOnOverlayClick={true}\r\n      className={styles.modal}\r\n      overlayClassName={styles.overlay}\r\n      ariaHideApp={false}\r\n    >\r\n      <div className={styles.modal_content}>\r\n        <button className={styles.close_button} onClick={onToggle}>\r\n          &times;\r\n        </button>\r\n        <h2>{widgetTitle}</h2>\r\n        <div>{children}</div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default Widget;\r\n","import MapMarker from \"features/mapMarker\";\r\nimport Widget from \"shared/ui/widget\";\r\n\r\ninterface WidgetProps {\r\n  handleWidtgetToggle: () => void;\r\n  isWidgetOpen: boolean;\r\n}\r\n\r\nconst AtmsSearchWidget: React.FC<WidgetProps> = ({\r\n  handleWidtgetToggle,\r\n  isWidgetOpen,\r\n}) => {\r\n  return (\r\n    <Widget\r\n      onToggle={handleWidtgetToggle}\r\n      widgetTitle=\"ATMS Search\"\r\n      isWidgetOpen={isWidgetOpen}\r\n    >\r\n      <div>\r\n        <MapMarker />\r\n        <div>\r\n          <h3>Location</h3>\r\n          <p>Address</p>\r\n        </div>\r\n        <div>\r\n          <h3>How to Get There</h3>\r\n          <p>Brief description of how to get to the terminal</p>\r\n        </div>\r\n      </div>\r\n    </Widget>\r\n  );\r\n};\r\n\r\nexport default AtmsSearchWidget;\r\n","import React from \"react\";\r\nimport { RiArrowRightSLine } from \"react-icons/ri\";\r\nimport { User } from \"entities/user/index\";\r\nconst UserCard: React.FC<{ userData: User }> = ({ userData }) => {\r\n  const hasIcon = Boolean(userData.icon);\r\n\r\n  return (\r\n    <div className=\"flex items-center w-4/6\">\r\n      {hasIcon ? (\r\n        <img\r\n          src={userData.icon}\r\n          alt=\"User Icon\"\r\n          className=\"w-1/5 h-full rounded-full\"\r\n        />\r\n      ) : (\r\n        <div className=\"w-[30px] h-[30px] flex items-center justify-center rounded-full bg-blue-500 text-white text-xl font-bold\">\r\n          <div id={userData.id}>{userData.credential}</div>\r\n        </div>\r\n      )}\r\n      <div className=\"ml-2 w-4/5 text-1xl font-bold flex items-center\">\r\n        <p>{userData.fullName}</p>\r\n        <div className=\"mt-1\">\r\n          <RiArrowRightSLine />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UserCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"overlay\":\"giftButton_overlay__SZwIx\",\"modal\":\"giftButton_modal__mUcJ5\",\"close_button\":\"giftButton_close_button__BTLU-\"};","import React, { useState } from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { FaGift } from \"react-icons/fa\";\r\nimport styles from \"./index.module.css\";\r\nconst GiftButton: React.FC = () => {\r\n  const [isWidgetOpen, setIsWidgetOpen] = useState(false);\r\n\r\n  const handleWidtgetToggle = () => {\r\n    setIsWidgetOpen(!isWidgetOpen);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <button\r\n        className=\"flex items-center bg-purple-500 text-white rounded-full w-3/6 p-2 gap-2\"\r\n        onClick={handleWidtgetToggle}\r\n      >\r\n        <FaGift className=\"ml-1 text-yellow-400\" />\r\n        <p>For friend</p>\r\n      </button>\r\n      <Modal\r\n        isOpen={isWidgetOpen}\r\n        onRequestClose={handleWidtgetToggle}\r\n        shouldCloseOnOverlayClick={true}\r\n        className={styles.modal}\r\n        overlayClassName={styles.overlay}\r\n        ariaHideApp={false}\r\n      >\r\n        <div className={styles.modal_content}>\r\n          <button className={styles.close_button} onClick={handleWidtgetToggle}>\r\n            &times;\r\n          </button>\r\n          <h2>Referral Bonus</h2>\r\n          <p>You have received a referral bonus for inviting a friend!</p>\r\n        </div>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GiftButton;\r\n","import React from \"react\";\r\n\r\nconst LoadingIndicator = () => (\r\n  <div className={`flex items-center gap-2 w-full h-full`}>\r\n    <div\r\n      className={`w-2/5 h-full rounded-full animate-pulse`}\r\n      style={{ backgroundColor: \"#ccc\" }}\r\n    ></div>\r\n    <div\r\n      className={`w-3/5  h-full rounded-lg animate-pulse`}\r\n      style={{ backgroundColor: \"#ccc\" }}\r\n    ></div>\r\n  </div>\r\n);\r\n\r\nexport default LoadingIndicator;\r\n","import React from \"react\";\r\n\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport { ActivityProps } from \"entities/activity\";\r\n\r\nconst ActivityCard: React.FC<ActivityProps> = ({\r\n  handleActivityDetailsToggle,\r\n  activityTitle,\r\n  activityId,\r\n}) => {\r\n  return (\r\n    <div\r\n      className=\"w-[80px] h-[80px] bg-blue-500 rounded-lg text-white font-bold cursor-pointer flex items-center justify-center\"\r\n      onClick={() => handleActivityDetailsToggle(activityId)}\r\n    >\r\n      {activityTitle}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivityCard;\r\n","import Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\nimport ActivityCard from \"./activity\";\r\nimport { Activity } from \"entities/activity\";\r\n\r\ninterface ActivitiesCarouselProps {\r\n  activities: Activity[];\r\n  handleActivityDetailsToggle: (activityId: number) => void;\r\n}\r\n\r\nconst ActivitiesCarousel: React.FC<ActivitiesCarouselProps> = ({\r\n  activities,\r\n  handleActivityDetailsToggle,\r\n}) => {\r\n  const settings = {\r\n    dots: false,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 3,\r\n    slidesToScroll: 1,\r\n    swipeToSlide: true,\r\n  };\r\n\r\n  return (\r\n    <div className=\"\">\r\n      <Slider {...settings}>\r\n        {activities.map((activity: Activity) => (\r\n          <ActivityCard\r\n            handleActivityDetailsToggle={handleActivityDetailsToggle}\r\n            activityTitle={activity.activityTitle}\r\n            activityId={activity.activityId}\r\n          ></ActivityCard>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ActivitiesCarousel;\r\n","import React, { useEffect } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport Slider from \"react-slick\";\r\nimport \"slick-carousel/slick/slick.css\";\r\nimport \"slick-carousel/slick/slick-theme.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Slide } from \"shared/sharedTypes\";\r\n\r\ninterface CarouselProps {\r\n  activityId: number;\r\n  slides: Slide[];\r\n  handleSlideCarouselToggle: (id: number) => void;\r\n  isActivityDetailsOpen: boolean; // Добавляем isActivityDetailsOpen\r\n}\r\n\r\nconst SlideCarousel: React.FC<CarouselProps> = ({\r\n  slides,\r\n  handleSlideCarouselToggle,\r\n  isActivityDetailsOpen,\r\n  activityId,\r\n}) => {\r\n  const settings = {\r\n    dots: true,\r\n    infinite: true,\r\n    speed: 500,\r\n    slidesToShow: 1,\r\n    slidesToScroll: 1,\r\n  };\r\n\r\n  useEffect(() => {\r\n    console.log(\"SlideCarousel isActivityDetailsOpen:\", isActivityDetailsOpen);\r\n  }, [isActivityDetailsOpen]);\r\n\r\n  const modalRoot = document.getElementById(\"modal-root\");\r\n\r\n  // Создаем новый элемент для модального окна\r\n  const modalElement = document.createElement(\"div\");\r\n\r\n  useEffect(() => {\r\n    // Добавляем элемент модального окна в корневой элемент\r\n    modalRoot?.appendChild(modalElement);\r\n\r\n    // Удаление элемента при размонтировании компонента\r\n    return () => {\r\n      modalRoot?.removeChild(modalElement);\r\n    };\r\n  }, [modalElement, modalRoot]);\r\n\r\n  return createPortal(\r\n    <div className=\"\">\r\n      <div className=\"carousel fixed top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-[400px] h-full bg-blue-500 z-10 p-6\">\r\n        <button\r\n          onClick={() => handleSlideCarouselToggle(activityId)}\r\n          className=\" top-0 right-0 text-white m-5 rounded-full transition-all duration-300 hover:bg-white hover:text-blue-500 w-[40px] h-[40px]\"\r\n        >\r\n          <FontAwesomeIcon icon={faTimes} />\r\n        </button>\r\n        <Slider {...settings} className=\"carousel-slider mt-16 \">\r\n          {slides.map((slide, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"slide text-white flex flex-col items-center justify-center\"\r\n            >\r\n              <p className=\"text-2xl mb-10 text-yellow-300\">\r\n                {slide.slideTitle}\r\n              </p>\r\n              <p className=\"\">{slide.slideContent}</p>\r\n            </div>\r\n          ))}\r\n        </Slider>\r\n      </div>\r\n    </div>,\r\n    modalElement\r\n  );\r\n};\r\n\r\nexport default SlideCarousel;\r\n","import { createPortal } from \"react-dom\";\r\nimport SlideCarousel from \"shared/ui/slideCarousel\";\r\nimport { ItemWithSlides } from \"shared/sharedTypes\";\r\n\r\ninterface SlideCarouselContainerProps {\r\n  modalRootElement: string;\r\n  payload: ItemWithSlides[];\r\n  openedActivityDetailsId: number;\r\n  isActivityDetailsOpen: boolean;\r\n  handleActivityDetailsToggle: (id: number) => void;\r\n}\r\n\r\nconst SlideCarouselContainer: React.FC<SlideCarouselContainerProps> = ({\r\n  modalRootElement,\r\n  payload,\r\n  openedActivityDetailsId,\r\n  isActivityDetailsOpen,\r\n  handleActivityDetailsToggle,\r\n}) => {\r\n  const modalRoot = document.getElementById(modalRootElement);\r\n\r\n  const activity = payload.find(\r\n    (activity) => activity.id === openedActivityDetailsId\r\n  );\r\n\r\n  if (activity && modalRoot) {\r\n    return createPortal(\r\n      <SlideCarousel\r\n        activityId={activity.id}\r\n        slides={activity.slides}\r\n        handleSlideCarouselToggle={handleActivityDetailsToggle}\r\n        isActivityDetailsOpen={isActivityDetailsOpen}\r\n      />,\r\n      modalRoot\r\n    );\r\n  }\r\n\r\n  return null;\r\n};\r\n\r\nexport default SlideCarouselContainer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Provider, useSelector, useDispatch } from \"react-redux\";\r\nimport store from \"store\";\r\nimport { AppDispatch, RootState } from \"store\";\r\nimport { getLoginedUser } from \"store/actions/usersActions\";\r\nimport { getActivities } from \"store/actions/activitiesActions\";\r\nimport { getAtmsList } from \"store/actions/atmsActions\";\r\nimport AtmsSearch from \"features/atmsSearch\";\r\nimport AtmsSearchWidget from \"widgets/atmsSearchWidget\";\r\nimport Navbar from \"shared/ui/navbar\";\r\nimport UserCard from \"features/userCard/index\";\r\nimport GiftButton from \"features/giftButton\";\r\nimport LoadingIndicator from \"shared/ui/loadingIndicator\";\r\nimport ActivitiesCarousel from \"features/activitiesCarousele\";\r\nimport SlideCarouselContainer from \"features/slideCarouselContainer\";\r\nimport { ItemWithSlides } from \"shared/sharedTypes\";\r\nimport { Activity } from \"entities/activity\";\r\n\r\nfunction HomePage() {\r\n  const userState = useSelector((state: RootState) => state.user);\r\n\r\n  const activitiesState = useSelector((state: RootState) => state.activities);\r\n  const atmsState = useSelector((state: RootState) => state.atm);\r\n\r\n  const [openedActivityDetailsId, setOpenedActivityDetailsId] =\r\n    useState<number>(0);\r\n\r\n  const dispatch = useDispatch<AppDispatch>();\r\n\r\n  useEffect(() => {\r\n    dispatch(getLoginedUser());\r\n    dispatch(getActivities());\r\n    dispatch(getAtmsList());\r\n  }, [dispatch]);\r\n\r\n  const [isAtmsSearchWidgetOpen, setIsAtmsSearchWidgetOpen] = useState(false);\r\n  const handleWidtgetToggle = () => {\r\n    setIsAtmsSearchWidgetOpen(!isAtmsSearchWidgetOpen);\r\n  };\r\n\r\n  const [isActivityDetailsOpen, setActivitiesDetailsOpen] = useState(false);\r\n\r\n  const handleActivityDetailsToggle = (id: number) => {\r\n    setActivitiesDetailsOpen(!isActivityDetailsOpen);\r\n    openedActivityDetailsId\r\n      ? setOpenedActivityDetailsId(0)\r\n      : setOpenedActivityDetailsId(id);\r\n\r\n    console.log(typeof activitiesState);\r\n  };\r\n\r\n  function mapActivitiesToItemsWithSlides(\r\n    activities: Activity[]\r\n  ): ItemWithSlides[] {\r\n    return activities.map((activity) => ({\r\n      title: activity.activityTitle,\r\n      id: activity.activityId,\r\n      slides: activity.slides,\r\n      icon: activity.activityIcon,\r\n    }));\r\n  }\r\n\r\n  return (\r\n    <Provider store={store}>\r\n      <div className=\"home-page relative flex flex-col gap-y-10\">\r\n        <section className=\"atms-search\">\r\n          <AtmsSearch\r\n            handleWidtgetToggle={handleWidtgetToggle}\r\n            atms={atmsState.atms}\r\n          />\r\n          {isAtmsSearchWidgetOpen && (\r\n            <AtmsSearchWidget\r\n              handleWidtgetToggle={handleWidtgetToggle}\r\n              isWidgetOpen={isAtmsSearchWidgetOpen}\r\n            />\r\n          )}\r\n        </section>\r\n        <section className=\"user-info\">\r\n          <div className=\"flex items-center justify-between w-full\">\r\n            {userState.loading ? (\r\n              <LoadingIndicator />\r\n            ) : (\r\n              <UserCard userData={userState.loginedUser} />\r\n            )}\r\n            <GiftButton />\r\n          </div>\r\n        </section>\r\n        <section className=\"activities-carousele\">\r\n          <ActivitiesCarousel\r\n            handleActivityDetailsToggle={handleActivityDetailsToggle}\r\n            activities={activitiesState}\r\n          />\r\n        </section>\r\n        <section className=\"activity-details\">\r\n          <div id=\"modal-root\"></div>\r\n          {isActivityDetailsOpen && (\r\n            <SlideCarouselContainer\r\n              modalRootElement={\"modal-root\"}\r\n              payload={mapActivitiesToItemsWithSlides(activitiesState)}\r\n              openedActivityDetailsId={openedActivityDetailsId}\r\n              handleActivityDetailsToggle={handleActivityDetailsToggle}\r\n              isActivityDetailsOpen={isActivityDetailsOpen}\r\n            />\r\n          )}\r\n        </section>\r\n\r\n        <Navbar />\r\n      </div>\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default HomePage;\r\n","import React from \"react\";\r\nimport {\r\n  AiOutlineHome,\r\n  AiOutlineDollar,\r\n  AiOutlineEnvironment,\r\n  AiOutlineMessage,\r\n  AiOutlineEllipsis,\r\n} from \"react-icons/ai\";\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n\r\nconst navLinks = [\r\n  { path: \"/\", icon: AiOutlineHome, text: \"Home\" },\r\n  { path: \"/payments\", icon: AiOutlineDollar, text: \"Payments\" },\r\n  { path: \"/city\", icon: AiOutlineEnvironment, text: \"City\" },\r\n  { path: \"/chat\", icon: AiOutlineMessage, text: \"Chat\" },\r\n  { path: \"/more\", icon: AiOutlineEllipsis, text: \"More\" },\r\n];\r\n\r\nfunction Navbar() {\r\n  const location = useLocation();\r\n\r\n  const isActive = (path: string) => {\r\n    return location.pathname === path ? \"text-blue-500\" : \"\";\r\n  };\r\n\r\n  return (\r\n    <nav className=\"bg-white p-4 w-full fixed inset-x-0 bottom-0\">\r\n      <div className=\"flex justify-center\">\r\n        <ul className=\"flex space-x-4\">\r\n          {navLinks.map(({ path, icon: Icon, text }) => (\r\n            <li className=\"nav-item\" key={path}>\r\n              <Link\r\n                className={`nav-link flex flex-col items-center ${isActive(\r\n                  path\r\n                )}`}\r\n                to={path}\r\n              >\r\n                <Icon className={`${isActive(path)}`} />\r\n                <span className={`mt-1 ${isActive(path)}`}>{text}</span>\r\n              </Link>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n"],"names":["_ref","placeholder","value","onChange","onClick","_jsxs","className","children","_jsx","FiSearch","type","event","target","atm","handleWidtgetToggle","location","address","atms","length","map","AtmCard","id","_useState","useState","_useState2","_slicedToArray","searchText","setSearchText","_useState3","_useState4","searchResults","setSearchResults","_useState5","_useState6","searchResultOpened","setSearchResultOpen","searchResultRef","useRef","useEffect","handleClickOutside","current","contains","document","addEventListener","removeEventListener","ref","Searchbar","filteredResults","filter","toLowerCase","includes","AtmsList","LoadScript","googleMapsApiKey","GoogleMap","mapContainerStyle","width","height","center","lat","lng","zoom","onToggle","widgetTitle","isWidgetOpen","Modal","isOpen","onRequestClose","shouldCloseOnOverlayClick","styles","modal","overlayClassName","overlay","ariaHideApp","modal_content","close_button","Widget","MapMarker","userData","hasIcon","Boolean","icon","src","alt","credential","fullName","RiArrowRightSLine","setIsWidgetOpen","_Fragment","FaGift","style","backgroundColor","handleActivityDetailsToggle","activityTitle","activityId","activities","Slider","_objectSpread","dots","infinite","speed","slidesToShow","slidesToScroll","swipeToSlide","activity","ActivityCard","slides","handleSlideCarouselToggle","isActivityDetailsOpen","console","log","modalRoot","getElementById","modalElement","createElement","appendChild","removeChild","createPortal","FontAwesomeIcon","faTimes","slide","index","slideTitle","slideContent","modalRootElement","payload","openedActivityDetailsId","find","SlideCarousel","userState","useSelector","state","user","activitiesState","atmsState","setOpenedActivityDetailsId","dispatch","useDispatch","getLoginedUser","getActivities","getAtmsList","isAtmsSearchWidgetOpen","setIsAtmsSearchWidgetOpen","setActivitiesDetailsOpen","Provider","store","AtmsSearch","AtmsSearchWidget","loading","LoadingIndicator","UserCard","loginedUser","GiftButton","ActivitiesCarousel","SlideCarouselContainer","title","activityIcon","Navbar","navLinks","path","AiOutlineHome","text","AiOutlineDollar","AiOutlineEnvironment","AiOutlineMessage","AiOutlineEllipsis","useLocation","isActive","pathname","Icon","Link","concat","to"],"sourceRoot":""}